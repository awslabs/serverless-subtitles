AWSTemplateFormatVersion: "2010-09-09"

Description:
  Storage layer for subtitle demonstration

Resources:
  SUBS3Media:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub
        - subtitle.media.${U}.aws.com
        - {U: !ImportValue SUBUsername}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [POST,GET,PUT,DELETE,HEAD]
            AllowedOrigins: ['*']
            ExposedHeaders: ['ETag']
            MaxAge: '3600'
      NotificationConfiguration:
        LambdaConfigurations:
          -
            Function: !ImportValue SUBLambdaFunctionStart
            Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  -
                    Name: "prefix"
                    Value: "0-input"

  SUBLambdaFunctionStart:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !ImportValue SUBLambdaFunctionStart
      Principal: "s3.amazonaws.com"
      SourceArn: !GetAtt "SUBS3Media.Arn"
      SourceAccount: !Sub ${AWS::AccountId}

  SUBBucketPolicyMedia:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref SUBS3Media
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "elastictranscoder.amazonaws.com"
            Action:
              - "s3:Get*"
              - "s3:ListBucket"
              - "s3:Put*"
              - "s3:*MultipartUpload*"
            Resource:
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com/*"
                - {u: !ImportValue SUBUsername}
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com"
                - {u: !ImportValue SUBUsername}
          -
            Effect: "Allow"
            Principal:
              Service: "transcribe.amazonaws.com"
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com/*"
                - {u: !ImportValue SUBUsername}
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com"
                - {u: !ImportValue SUBUsername}
          -
            Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "s3:Get*"
              - "s3:ListBucket"
              - "s3:Put*"
              - "s3:*MultipartUpload*"
            Resource:
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com/*"
                - {u: !ImportValue SUBUsername}
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com"
                - {u: !ImportValue SUBUsername}
          -
            Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/SubtitleCognitoIdentityPool"
            Action: "s3:put*"
            Resource:
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com/*"
                - {u: !ImportValue SUBUsername}
              - !Sub
                - "arn:aws:s3:::subtitle.media.${u}.aws.com"
                - {u: !ImportValue SUBUsername}
Outputs:
  SUBS3Media:
    Value: !GetAtt SUBS3Media.Arn
    Description: "Subtitle S3 Media bucket ARN"
    Export:
      Name: SUBS3Media
